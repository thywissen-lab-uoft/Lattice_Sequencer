%------
%Author: DJ
%Created: August 2009
%Summary: This function makes a continuous acceleration time curve by
%integrating an acceleration vs time curve
%------

function y = dylan_time_curve(t,tt,K1,K2,K3,K4,a1,a2,dt)

%Define variables

  t1 = a1/K1;
   
  t2 = a1/(2*K1) - a1/(2*K2) + a2^2/(2*a1*K3) - a2^2/(2*a1*K4) + ...
    (a2^4*K1^2*K2^2*K3^2*K4)/...
    (2*a1*(a1*a2*K1^2*K2^2*K3^2*K4^2 + a2^2*K1^2*K2^2*K3^2*K4^2)) -...
    (a2^3*K1^2*K2^2*K3*K4^2)/...
    (2*(a1*a2*K1^2*K2^2*K3^2*K4^2 + a2^2*K1^2*K2^2*K3^2*K4^2)) -...
    (a2^4*K1^2*K2^2*K3*K4^2)/...
    (2*a1*(a1*a2*K1^2*K2^2*K3^2*K4^2 + a2^2*K1^2*K2^2*K3^2*K4^2)) -...
    (a1*a2^2*K1*K2^2*K3^2*K4^2)/...
    (2*(a1*a2*K1^2*K2^2*K3^2*K4^2 + a2^2*K1^2*K2^2*K3^2*K4^2)) + (a2*tt)/a1 -...
    (a2^3*K1^2*K2^2*K3^2*K4^2*tt)/...
    (a1*(a1*a2*K1^2*K2^2*K3^2*K4^2 +...
       a2^2*K1^2*K2^2*K3^2*K4^2)) - (a2*sqrt(4*a1^2*a2^4*K1^4*K2^4*K3^4*K4^2 +...
          a1*a2^5*K1^4*K2^4*K3^4*K4^2 + 6*a1^3*a2^3*K1^3*K2^4*K3^4*K4^3 -...
          a1^2*a2^4*K1^4*K2^4*K3^2*K4^4 - a1*a2^5*K1^4*K2^4*K3^2*K4^4 -...
          a1^5*a2*K1^4*K2^2*K3^4*K4^4 - a1^4*a2^2*K1^4*K2^2*K3^4*K4^4 +...
          a1^5*a2*K1^2*K2^4*K3^4*K4^4 + 4*a1^4*a2^2*K1^2*K2^4*K3^4*K4^4 -...
          24*a1^2*a2*dt*K1^4*K2^4*K3^4*K4^4 -...
          24*a1*a2^2*dt*K1^4*K2^4*K3^4*K4^4 -...
          12*a1^2*a2^3*K1^4*K2^4*K3^4*K4^3*tt -...
          12*a1^3*a2^2*K1^3*K2^4*K3^4*K4^4*tt +...
          12*a1^2*a2^2*K1^4*K2^4*K3^4*K4^4*tt^2))/(2*sqrt(3)*...
        a1*(a1*a2*K1^2*K2^2*K3^2*K4^2 + a2^2*K1^2*K2^2*K3^2*K4^2));
  
  t3 = 1/...
   (2*a1)*(a1^2/K1 + a1^2/K2 + a2^2/K3 - a2^2/K4 + (a2^4*K1^2*K2^2*K3^2*K4)/...
     (a1*a2*K1^2*K2^2*K3^2*K4^2 + a2^2*K1^2*K2^2*K3^2*K4^2) -...
     (a1*a2^3*K1^2*K2^2*K3*K4^2)/...
     (a1*a2*K1^2*K2^2*K3^2*K4^2 + a2^2*K1^2*K2^2*K3^2*K4^2) -...
     (a2^4*K1^2*K2^2*K3*K4^2)/...
     (a1*a2*K1^2*K2^2*K3^2*K4^2 + a2^2*K1^2*K2^2*K3^2*K4^2) -...
     (a1^2*a2^2*K1*K2^2*K3^2*K4^2)/...
     (a1*a2*K1^2*K2^2*K3^2*K4^2 + a2^2*K1^2*K2^2*K3^2*K4^2) + 2*a2*tt -...
     (2*a2^3*K1^2*K2^2*K3^2*K4^2*tt)/...
     (a1*a2*K1^2*K2^2*K3^2*K4^2 +...
      a2^2*K1^2*K2^2*K3^2*K4^2) - (a2*sqrt(4*a1^2*a2^4*K1^4*K2^4*K3^4*K4^2 +...
           a1*a2^5*K1^4*K2^4*K3^4*K4^2 + 6*a1^3*a2^3*K1^3*K2^4*K3^4*K4^3 -...
           a1^2*a2^4*K1^4*K2^4*K3^2*K4^4 - a1*a2^5*K1^4*K2^4*K3^2*K4^4 -...
           a1^5*a2*K1^4*K2^2*K3^4*K4^4 - a1^4*a2^2*K1^4*K2^2*K3^4*K4^4 +...
           a1^5*a2*K1^2*K2^4*K3^4*K4^4 + 4*a1^4*a2^2*K1^2*K2^4*K3^4*K4^4 -...
           24*a1^2*a2*dt*K1^4*K2^4*K3^4*K4^4 -...
           24*a1*a2^2*dt*K1^4*K2^4*K3^4*K4^4 -...
           12*a1^2*a2^3*K1^4*K2^4*K3^4*K4^3*tt -...
           12*a1^3*a2^2*K1^3*K2^4*K3^4*K4^4*tt +...
           12*a1^2*a2^2*K1^4*K2^4*K3^4*K4^4*tt^2))/(sqrt(3)*...
        (a1*a2*K1^2*K2^2*K3^2*K4^2 + a2^2*K1^2*K2^2*K3^2*K4^2)));
  
    t4 = -a2/K3 - (a2^3*K1^2*K2^2*K3^2*K4)/...
    (2*(a1*a2*K1^2*K2^2*K3^2*K4^2 + a2^2*K1^2*K2^2*K3^2*K4^2)) +...
    (a1*a2^2*K1^2*K2^2*K3*K4^2)/...
    (2*(a1*a2*K1^2*K2^2*K3^2*K4^2 + a2^2*K1^2*K2^2*K3^2*K4^2)) +... 
    (a2^3*K1^2*K2^2*K3*K4^2)/...
    (2*(a1*a2*K1^2*K2^2*K3^2*K4^2 + a2^2*K1^2*K2^2*K3^2*K4^2)) +... 
    (a1^2*a2*K1*K2^2*K3^2*K4^2)/...
    (2*(a1*a2*K1^2*K2^2*K3^2*K4^2 + a2^2*K1^2*K2^2*K3^2*K4^2)) +...
    (a2^2*K1^2*K2^2*K3^2*K4^2*tt)/...
    (a1*a2*K1^2*K2^2*K3^2*K4^2 +...
     a2^2*K1^2*K2^2*K3^2*K4^2) + (sqrt(4*a1^2*a2^4*K1^4*K2^4*K3^4*K4^2 +...
         a1*a2^5*K1^4*K2^4*K3^4*K4^2 + 6*a1^3*a2^3*K1^3*K2^4*K3^4*K4^3 -...
         a1^2*a2^4*K1^4*K2^4*K3^2*K4^4 - a1*a2^5*K1^4*K2^4*K3^2*K4^4 -...
         a1^5*a2*K1^4*K2^2*K3^4*K4^4 - a1^4*a2^2*K1^4*K2^2*K3^4*K4^4 +...
         a1^5*a2*K1^2*K2^4*K3^4*K4^4 + 4*a1^4*a2^2*K1^2*K2^4*K3^4*K4^4 -...
         24*a1^2*a2*dt*K1^4*K2^4*K3^4*K4^4 -...
         24*a1*a2^2*dt*K1^4*K2^4*K3^4*K4^4 -...
         12*a1^2*a2^3*K1^4*K2^4*K3^4*K4^3*tt -...
         12*a1^3*a2^2*K1^3*K2^4*K3^4*K4^4*tt +...
         12*a1^2*a2^2*K1^4*K2^4*K3^4*K4^4*tt^2))/(2*sqrt(3)*...
        (a1*a2*K1^2*K2^2*K3^2*K4^2 + a2^2*K1^2*K2^2*K3^2*K4^2));
    
    t5 = (-3*a2^3*K1^2*K2^2*K3^2*K4 + 3*a1*a2^2*K1^2*K2^2*K3*K4^2 +...
      3*a2^3*K1^2*K2^2*K3*K4^2 + 3*a1^2*a2*K1*K2^2*K3^2*K4^2 +...
      6*a2^2*K1^2*K2^2*K3^2*K4^2*tt +...
      sqrt(3)*...
        sqrt(4*a1^2*a2^4*K1^4*K2^4*K3^4*K4^2 + a1*a2^5*K1^4*K2^4*K3^4*K4^2 +...
          6*a1^3*a2^3*K1^3*K2^4*K3^4*K4^3 - a1^2*a2^4*K1^4*K2^4*K3^2*K4^4 -...
          a1*a2^5*K1^4*K2^4*K3^2*K4^4 - a1^5*a2*K1^4*K2^2*K3^4*K4^4 -...
          a1^4*a2^2*K1^4*K2^2*K3^4*K4^4 + a1^5*a2*K1^2*K2^4*K3^4*K4^4 +...
          4*a1^4*a2^2*K1^2*K2^4*K3^4*K4^4 -...
          24*a1^2*a2*dt*K1^4*K2^4*K3^4*K4^4 -...
          24*a1*a2^2*dt*K1^4*K2^4*K3^4*K4^4 -...
          12*a1^2*a2^3*K1^4*K2^4*K3^4*K4^3*tt -...
          12*a1^3*a2^2*K1^3*K2^4*K3^4*K4^4*tt +...
          12*a1^2*a2^2*K1^4*K2^4*K3^4*K4^4*tt^2))/...
      (6*(a1*a2*K1^2*K2^2*K3^2*K4^2 + a2^2*K1^2*K2^2*K3^2*K4^2)); 

   t6 = -a2/K4 + tt;
  


%preallocate array
y = zeros(size(t));

%Go through each of the array elements
for i=1:length(y)

%Calculate distance curve based on what time it is:
    if (t(i)>=0) && (t(i)<t1);
        
        y(i) = 1/6*K1*t(i)^3;
        
    elseif (t(i) >= t1 ) && (t(i) < t2);
        
        y(i) = 1/6*K1*t1^3 + 1/2*K1*t1^2*(t(i)-t1) + 1/2*a1*(t(i)-t1)^2;
        
    elseif (t(i) >= t2 ) && (t(i) < t3);
        
        y(i) = 1/6*K1*t1^3 + 1/2*K1*t1^2*(t(i)-t1) + 1/2*a1*(t2-t1)^2 +...
                a1*(t2-t1)*(t(i)-t2) + 1/2*a1*(t(i)-t2)^2 - 1/6*K2*(t(i)-t2)^3;
        
    elseif (t(i) >= t3 ) && (t(i) < t4);
        
        y(i) = 1/6*K1*t1^3 + 1/2*K1*t1^2*(t(i)-t1) + 1/2*a1*(t2-t1)^2 +...
                a1*(t2-t1)*(t(i)-t2) + a1*(t3-t2)*(t(i)-t3) + 1/2*a1*(t3-t2)^2 -...
                1/6*K2*(t3-t2)^3 - 1/2*K2*(t3-t2)^2*(t(i)-t3);
        
    elseif (t(i) >= t4 ) && (t(i) < t5);

        y(i) = 1/6*K1*t1^3 + 1/2*K1*t1^2*(t(i)-t1) + a1*(t2-t1)*(t(i)-t2) +...
                1/2*a1*(t2-t1)^2 + 1/2*a1*(t3-t2)^2 - 1/6*K2*(t3-t2)^3 -...
                1/2*K2*(t3-t2)^2*(t(i)-t3) + a1*(t3-t2)*(t(i)-t3) - 1/6*K3*(t(i)-t4)^3;
        
    elseif (t(i) >= t5 ) && (t(i) < t6);
        
        y(i) = 1/6*K1*t1^3 + 1/2*K1*t1^2*(t(i)-t1) + a1*(t2-t1)*(t(i)-t2) +...
                1/2*a1*(t2-t1)^2 + 1/2*a1*(t3-t2)^2 - 1/6*K2*(t3-t2)^3 -...
                1/2*K2*(t3-t2)^2*(t(i)-t3) + a1*(t3-t2)*(t(i)-t3) - 1/6*K3*(t5-t4)^3 -...
                1/2*K3*(t5-t4)^2*(t(i)-t5) - 1/2*a2*(t(i)-t5)^2;
        
    elseif (t(i) >= t6 ) && (t(i) <= tt);
        
        y(i) = 1/6*K1*t1^3 + 1/2*K1*t1^2*(t(i)-t1) + a1*(t2-t1)*(t(i)-t2) +...
                1/2*a1*(t2-t1)^2 + 1/2*a1*(t3-t2)^2 - 1/6*K2*(t3-t2)^3 -...
                1/2*K2*(t3-t2)^2*(t(i)-t3) + a1*(t3-t2)*(t(i)-t3) - 1/6*K3*(t5-t4)^3 -...
                1/2*K3*(t5-t4)^2*(t(i)-t5) - 1/2*a2*(t(i)-t6)^2 - a2*(t6-t5)*(t(i)-t6) +...
                1/6*K4*(t(i)-t6)^3 - 1/2*a2*(t6-t5)^2;
        
    else
    
       y(i) = 1/6*K1*t1^3 + 1/2*K1*t1^2*(tt-t1) + a1*(t2-t1)*(tt-t2) +...
                1/2*a1*(t2-t1)^2 + 1/2*a1*(t3-t2)^2 - 1/6*K2*(t3-t2)^3 -...
                1/2*K2*(t3-t2)^2*(tt-t3) + a1*(t3-t2)*(tt-t3) - 1/6*K3*(t5-t4)^3 -...
                1/2*K3*(t5-t4)^2*(tt-t5) - 1/2*a2*(tt-t6)^2 - a2*(t6-t5)*(tt-t6) +...
                1/6*K4*(tt-t6)^3 - 1/2*a2*(t6-t5)^2;
        
    end
    
    
end


end